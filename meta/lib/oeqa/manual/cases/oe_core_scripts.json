[
    {
        "test": {
            "@alias": "Scripts_and_Tools.Scripts_and_Tools.Use_scripts/pybootchartgui/pybootchartgui.py_to_generate_build_profiles",
            "author": [
                {
                    "email": "alexandru.c.georgescu@intel.com",
                    "name": "alexandru.c.georgescu@intel.com"
                }
            ],
            "execution": {
                "1": {
                    "action": "Run a build for a recipe (e.g. core-image-minimal) \n",
                    "expected_results": ""
                },
                "2": {
                    "action": "Run the profiling script, ../scripts/pybootchartgui/pybootchartgui.py tmp/buildstats/  \n \n",
                    "expected_results": ""
                },
                "3": {
                    "action": "Verify the results ",
                    "expected_results": "The scripts generates svg files with the profiling results . "
                }
            },
            "summary": "Use_scripts/pybootchartgui/pybootchartgui.py_to_generate_build_profiles"
        }
    },
    {
        "test": {
            "@alias": "oe-core_other.oe-core_other.Crosstap_script_check",
            "author": [
                {
                    "email": "alexandru.c.georgescu@intel.com",
                    "name": "alexandru.c.georgescu@intel.com"
                }
            ],
            "execution": {
                "1": {
                    "action": "Create the trace_open.stp script as follows in the host machine:   probe syscall.open   {      printf (\"%s(%d) open (%s)\\n\", execname(), pid(), argstr) }   if the above failed, then create the below instead.  probe syscall.open {  printf (\"%s(%d) open\\n\", execname(), pid())  } ",
                    "expected_results": ""
                },
                "2": {
                    "action": "Add 'tools-profile' and 'ssh-server-openssh' to EXTRA_IMAGE_FEATURES in local.conf  ",
                    "expected_results": ""
                },
                "3": {
                    "action": "Build a core-image-minimal image, build systemtap-native. Start the image under qemu. \n",
                    "expected_results": ""
                },
                "4": {
                    "action": "Make sure that the ssh service is started on the Qemu machine.  ",
                    "expected_results": ""
                },
                "5": {
                    "action": "From the host machine poky build_dir, run \"crosstap root@192.168.7.2 trace_open.stp\". \n ",
                    "expected_results": ""
                },
                "6": {
                    "action": "In QEMU, try to open some applications, such as open a terminal, input some command,   ",
                    "expected_results": ""
                },
                "7": {
                    "action": "Check the host machine, \"crosstap\" has related output.    NOTE: Do not build the kernel from shared state(sstate-cache) for this to work. ",
                    "expected_results": "The script should successfully connect to the qemu machine and there \nshould be presented a list of services(pid, process name) which run on \nthe qemu machine. "
                }
            },
            "summary": "Crosstap_script_check"
        }
    },
    {
        "test": {
            "@alias": "Scripts_and_Tools.Scripts_and_Tools.List_all_the_PACKAGECONFIG's_flags",
            "author": [
                {
                    "email": "yi.zhao@windriver.com",
                    "name": "yi.zhao@windriver.com"
                }
            ],
            "execution": {
                "1": {
                    "action": "Download the poky source and setup the environment.",
                    "expected_results": "In step 2, will list available pkgs which have PACKAGECONFIG flags:PACKAGE NAME (or RECIPE NAME)     PACKAGECONFIG FLAGS==============================================================alsa-tools-1.0.26.1                    defaultval gtk+avahi-ui-0.6.31                       defaultval pythonbluez4-4.101                         alsa defaultval pieIn step 3, will list available PACKAGECONFIG flags and all affected pkgsPACKAGECONFIG FLAG  PACKAGE NAMES (or RECIPE NAMES)====================================3g          connman-1.16   avahi         cups-1.6.3 pulseaudio-4.0beecrypt       rpm-5.4.9 rpm-native-5.4.9In step 4, will list all pkgs and PACKAGECONFIG information:==================================================gtk+-2.24.18/home/jiahongxu/yocto/poky/meta/recipes-gnome/gtk+/gtk+_2.24.18.bbPACKAGECONFIG x11PACKAGECONFIG[x11] --with-x=yes --with-gdktarget=x11,--with-x=no,${X11DEPENDS}xf86-video-intel-2.21.9/home/jiahongxu/yocto/poky/meta/recipes-graphics/xorg-driver/xf86-video-intel_2.21.9.bbPACKAGECONFIG NonePACKAGECONFIG[xvmc] --enable-xvmc,--disable-xvmc,libxvmcPACKAGECONFIG[sna] --enable-sna,--disable-snaIn step 5, will list pkgs with preferred version:PACKAGE NAME (or RECIPE NAME)      PACKAGECONFIG FLAGS===================================================alsa-tools-1.0.26.1                     defaultval gtk+avahi-ui-0.6.31                        defaultval pythonbluez4-4.101                          alsa defaultval piebluez5-5.7                            alsa defaultval obex-profiles   "
                },
                "2": {
                    "action": "Run \"../scripts/contrib/list-packageconfig-flags.py\"",
                    "expected_results": ""
                },
                "3": {
                    "action": "Run \"../scripts/contrib/list-packageconfig-flags.py -f\"",
                    "expected_results": ""
                },
                "4": {
                    "action": "Run \"../scripts/contrib/list-packageconfig-flags.py -a\"",
                    "expected_results": ""
                },
                "5": {
                    "action": "Run \"../scripts/contrib/list-packageconfig-flags.py -p\"",
                    "expected_results": ""
                }
            },
            "summary": "List_all_the_PACKAGECONFIG's_flags"
        }
    }
]