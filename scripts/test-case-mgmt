#!/usr/bin/env python3
#
# test case management tool - store test result and log
#
# As part of the initiative to provide LITE version Test Case Management System
# with command-line and plain-text files (eg. manual test case file, test plan
# file to specify list of test case to be executed, test result and log file)
# to replace Testopia.
# Test-result-log script was designed as part of the helper script for below purpose:
# 1. To store test result & log file inside git repository
# 2. (Future) To view text-based test summary report
# 3. (Future) To enable planning of test cases for execution and track its completion
#
# To look for help information.
#    $ test-case-mgmt
#
# To store test result for OEQA automated testcase, execute the below
#    $ test-case-mgmt store <folder-to-store> <git-branch> /
#      <oeqa-log-file-location> <type-of-oeqa-testcase-executed>
#
# Copyright (c) 2018, Intel Corporation.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms and conditions of the GNU General Public License,
# version 2, as published by the Free Software Foundation.
#
# This program is distributed in the hope it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#

import os
import sys
import argparse
import logging
script_path = os.path.dirname(os.path.realpath(__file__))
lib_path = script_path + '/lib'
sys.path = sys.path + [lib_path]
import argparse_oe
import scriptutils
import testcasemgmt.store
logger = scriptutils.logger_create('test-result-log')

def _validate_user_input_arguments(args):
    if hasattr(args, "top_folder"):
        if '/' in args.top_folder:
            logger.error('top_folder argument cannot contain / : %s' % args.top_folder)
            return False
        if '\\' in r"%r" % args.top_folder:
            logger.error('top_folder argument cannot contain \\ : %r' % args.top_folder)
            return False
    return True

def _set_default_arg_value_for_git_dir(args):
    # check if argument, git_dir, exist in the argparse from the specific subcommand
    if hasattr(args, "git_repo"):
        if args.git_repo == '':
            base_path = script_path + '/..'
            args.git_repo = os.path.join(base_path, 'test-result-log.git')
        logger.debug('Set git_dir argument: %s' % args.git_repo)

def main():
    parser = argparse_oe.ArgumentParser(description="OpenEmbedded testcase management tool, to store test result then to view test summary report.",
                                        add_help=False,
                                        epilog="Use %(prog)s <subcommand> --help to get help on a specific command")
    parser.add_argument('-h', '--help', action='help', default=argparse.SUPPRESS,
                        help='show this help message and exit')
    parser.add_argument('-d', '--debug', help='Enable debug output', action='store_true')
    parser.add_argument('-q', '--quiet', help='Print only errors', action='store_true')
    subparsers = parser.add_subparsers(dest="subparser_name", title='subcommands', metavar='<subcommand>')
    subparsers.required = True
    subparsers.add_subparser_group('store', 'Store test result & log', 100)
    testcasemgmt.store.register_commands(subparsers)
    args = parser.parse_args()
    if args.debug:
        logger.setLevel(logging.DEBUG)
    elif args.quiet:
        logger.setLevel(logging.ERROR)

    if not _validate_user_input_arguments(args):
        return -1
    _set_default_arg_value_for_git_dir(args)

    try:
        ret = args.func(args, logger)
    except argparse_oe.ArgumentUsageError as ae:
        parser.error_subcommand(ae.message, ae.subcommand)
    return ret

if __name__ == "__main__":
    sys.exit(main())
